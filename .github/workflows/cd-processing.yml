name: Deploy AWS Server

on: 
  push: 
    branches: [ develop ]

jobs:
  build: 
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    - name: Passed CI and Checkout latest source
      uses: actions/checkout@v2
      with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: otsv-coffee-app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
    
    # - name: Fill in the new image ID in the Amazon ECS task definition
    #   id: task-def
    #   uses: aws-actions/amazon-ecs-render-task-definition@v1
    #   with:
    #     task-definition: task-definition/deploy.json
    #     container-name: the-coffee-app
    #     image: 011151800176.dkr.ecr.us-east-2.amazonaws.com/otsv-coffee-app:latest

    # - name: Deploy Amazon ECS task definition
    #   uses: aws-actions/amazon-ecs-deploy-task-definition@v1
    #   with:
    #     task-definition: ${{ steps.task-def.outputs.task-definition }}
    #     service: coffe-service
    #     cluster: coffe-app-cluster
    #     wait-for-service-stability: true
